# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]
  release:
    types: [created, published]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    - run: npm ci
    - run: npm run format:check
    - run: npm run lint:check

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: path node gyp
      shell: powershell
      if: matrix.os == 'windows-latest'
      run: |
        npm install --global node-gyp@latest
        npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
    - run: npm ci
    - run: |
        node build-info.js ${{ github.ref }} ${{ github.sha }} > .env
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    - run: npm run build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: kiays
        SENTRY_PROJECT: script-player
        SENTRY_FINALIZE: false
    - run: npm test
      if: runner.os == 'macOS' || runner.os == 'Windows'

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: path node gyp
      shell: powershell
      if: matrix.os == 'windows-latest'
      run: |
        npm install --global node-gyp@latest
        npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
    - run: npm ci
    - run: |
        node build-info.js ${{ github.ref }} ${{ github.sha }} > .env
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    - run: npm run build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: kiays
        SENTRY_PROJECT: script-player
        SENTRY_FINALIZE: ${{ github.event_name == 'release' }}
    - run: npm run package
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    - run: npm run make
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-without-markdown
        path: |
          out/make/zip/*
    - name: List and upload files in artifacts directory
      run: |
        FILES=""
        while IFS= read -r -d '' file; do
          FILES="$FILES$file,"
        done < <(find out/make/zip -type f -print0)
        echo "FILES_TO_UPLOAD=$FILES" >> $GITHUB_ENV
      shell: bash
    - name: Upload artifacts to release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'release'
      with:
         files: ${{ env.FILES_TO_UPLOAD }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
